<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        afK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBg
        fJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigA
        GJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsK
        AManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuG
        AoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6
        oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8
        bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8m
        rxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAMan
        yeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDx
        afK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBg
        fJq8bigAGJ8mrxsKAManyeuGAoDxafK6oQBgfJq8bigAGJ8mrxsKAManyeuGAoDxTdy2bf8XNXVkMc8k
        66sAAAAASUVORK5CYII=
</value>
  </data>
</root>